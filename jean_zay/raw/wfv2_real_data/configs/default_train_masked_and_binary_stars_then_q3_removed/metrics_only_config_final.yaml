metrics:
   # Specify the type of model weights to load by entering "psf_model" to load weights of final psf model or "checkpoint" to load weights from a checkpoint callback.
  model_save_path: psf_model
  
  # Choose the training cycle for which to evaluate the psf_model. Can be: 1, 2, ...
  saved_training_cycle: 2
  
  # Metrics-only run: Specify model_params for a pre-trained model else leave blank if running training + metrics
  # Specify path to Parent Directory of Trained Model 
  # trained_model_path: </path/to/parent/directory/of/trained/model>
  trained_model_path: /lustre/fswork/projects/rech/rbn/ulx23va/projects/wf_projects/real_data_processing_conference/outputs/dataset_obs2378_masked_stars_then_q3_removed/v1/wf-outputs/wf-outputs-202509191852
  
  # Name of the Trained Model Config file stored in config sub-directory in the trained_model_path parent directory
  trained_model_config: training_config.yaml
  
  # Evaluate the chi2 metric.
  eval_chi2_metric: True

  # Evaluate the monchromatic RMSE metric.
  eval_mono_metric: False
  
  # Evaluate the OPD RMSE metric.
  eval_opd_metric: True
  
  # Evaluate the super-resolution and the shape RMSE metrics for the train dataset.
  eval_train_shape_results_dict: True

  # Evaluate the super-resolution and the shape RMSE metrics for the test dataset.
  eval_test_shape_results_dict: True
  
  # Name of Plotting Config file - Enter name of yaml file to run plot metrics else if empty run metrics evaluation only
  # plotting_config: <enter name of plotting_config .yaml file or leave empty>
  plotting_config:
  
  ground_truth_model:
    model_params:
      # PSF model used as ground truth for the evaluation. Options are: 'ground_truth_poly' for polychromatic and 'ground_truth_physical_poly' for polychromatic model with the physical layer extension PSF models.
      model_name: ground_truth_poly

      # Evaluation parameters
      # Number of bins used for the ground truth model poly PSF generation
      n_bins_lda: 20

      # Downsampling rate to match the oversampled model to the specified telescope's sampling.
      output_Q: 3

      # Oversampling rate used for the OPD/WFE PSF model.
      oversampling_rate: 3 
    
      # Dimension of the pixel PSF postage stamp
      output_dim: 32
        
      # Dimension of the OPD/Wavefront space."
      pupil_diameter: 256

      # Top-hat filter to avoid the aliasing effect in the obscuration mask
      LP_filter_length: 2

      # Boolean to define if we use sample weights based on the noise standard deviation estimation
      use_sample_weights: True 

      # Flag to use Zernike prior
      use_prior: False

      # Correct centroids
      correct_centroids: False

      # Sigma of the window function used to compute the centroids. Default Euclid value is 2.5
      sigma_centroid_window: 2.5

      # Default reference_shifts value for observations at Euclid conditions, i.e., pixel sampling and telescope parameters.
      reference_shifts: [-1/3, -1/3]

      # Rotation angle (in degrees) for the obscuration mask.
      # Must be a multiple of 90 (0, 90, 180, 270, etc.).
      # Rotation is counterclockwise.
      obscuration_rotation_angle: 0

      # Consider CCD missalignments
      add_ccd_misalignments: False

      # CCD missalignments input file path
      # This should be refactored. It might be better to directly look for the `tiles.npy` in
      # the `data/assets/` directory in the repository
      ccd_misalignments_input_path:
      
      # Interpolation type for the physical poly model. Options are: 'none', 'all', 'top_K', 'independent_Zk'."
      interpolation_type: None

      # SED intepolation points per bin
      sed_interp_pts_per_bin: 0

      # SED extrapolate 
      sed_extrapolate: True
      
      # SED interpolate kind
      sed_interp_kind: linear

      # Standard deviation of the multiplicative SED Gaussian noise.
      sed_sigma: 0

      # Limits of the PSF field coordinates for the x axis.
      x_lims: [0.0, 1.0e+3]
      
      # Limits of the PSF field coordinates for the y axis.
      y_lims: [0.0, 1.0e+3]
      
      # Hyperparameters for the Parametric model 
      param_hparams:
        # Random seed for Tensor Flow Initialization
        random_seed: 3877572
        
        # Parameter for the l2 loss function for the Optical path differences (OPD)/WFE
        l2_param: 0.
      
        # Zernike polynomial modes to use on the parametric part.
        n_zernikes: 45
      
        # Max polynomial degree of the parametric part.
        d_max: 2  

        # Flag to save optimisation history for parametric model
        save_optim_history_param: true

      # Hyperparameters for non-parametric model
      nonparam_hparams:
        # Max polynomial degree of the non-parametric part. 
        d_max_nonparam: 5 

        # Number of graph features
        num_graph_features: 0
        
        # L1 regularisation parameter for the non-parametric part."
        l1_rate: 1.0e-8

        # Flag to enable Projected learning for DD_features to be used with `poly` or `semiparametric` model.
        project_dd_features: False

        # Flag to reset DD_features to be used with `poly` or `semiparametric` model
        reset_dd_features: False

        # Flag to save optimisation history for non-parametric model
        save_optim_history_nonparam: True 

  metrics_hparams:
    # Batch size to use for the evaluation.
    batch_size: 16
  
    # Save RMS error for each super resolved PSF in the test dataset in addition to the mean across the FOV."
    # Flag to get Super-Resolution pixel PSF RMSE for each individual test star. 
    # If `True`, the relative pixel RMSE of each star is added to ther saving dictionary.
    opt_stars_rel_pix_rmse: True
  
    ## Specific parameters
    # Parameter for the l2 loss of the OPD.
    l2_param: 0.

    ## Define the resolution at which you'd like to measure the shape of the PSFs
    # Downsampling rate from the high-resolution pixel modelling space.
    # Recommended value: 1
    output_Q: 1

    # Dimension of the pixel PSF postage stamp; it should be big enough so that most of the signal is contained inside the postage stamp. 
    # It also depends on the Q values used.
    # Recommended value: 64 or higher
    output_dim: 64
      

